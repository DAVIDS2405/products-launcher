services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"

  orders-db:
    container_name: orders_database
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./orders-ms/pgdata:/var/lib/postgresql/data/pgdata
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: ordersdb
      PGDATA: /var/lib/postgresql/data/pgdata
    
      
  client-gateway:
    build: ./client-gateway
    ports:
      - "3000:3000"
    develop:
      watch:
        - action: sync
          path: ./client-gateway/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    env_file:
      - ./client-gateway/.env

  products-ms:
    build: ./products-ms
    develop:
      watch:
        - action: sync
          path: ./products-ms/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev 
    env_file:
      - ./products-ms/.env

  orders-ms:
    depends_on:
      - orders-db
    build: ./orders-ms
    develop:
      watch:
        - action: sync
          path: ./orders-ms/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    env_file:
      - ./orders-ms/.env

  payments-ms:
    build: ./payments-ms
    develop:
      watch:
        - action: sync
          path: ./payments-ms/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    env_file:
      - ./payments-ms/.env

  auth-ms:
    build: ./auth-ms
    develop:
      watch:
        - action: sync
          path: ./auth-ms/src
          target: /usr/src/app/src
          ignore:
            - node_modules
    command: npm run start:dev
    env_file:
      - ./auth-ms/.env
